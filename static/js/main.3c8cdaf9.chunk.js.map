{"version":3,"sources":["components/Goods/Goods.jsx","App.js","index.js"],"names":["Goods","state","isReverse","sortBy","minLength","reverse","setState","sortHandler","event","sortType","target","name","resetFilters","defaultFilters","setMinLength","value","this","goods","props","visibleGoods","filter","good","length","sort","a","b","localeCompare","map","key","type","onClick","className","classNames","activeBtn","onChange","Array","fill","_","i","item","React","Component","goodsFromServer","App","isGoodsVisible","changeGoodsStatus","ReactDOM","render","document","getElementById"],"mappings":"gRAkHeA,E,4MA3GbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,KACRC,UAAW,G,EAObC,QAAU,WACR,EAAKC,UAAS,kBAAkB,CAC9BJ,WADY,EAAEA,e,EAKlBK,YAAc,SAACC,GACb,IAAcC,EAAaD,EAAME,OAAzBC,KAER,EAAKL,UAAS,kBAAiB,CAC7BH,OADY,EAAGA,SACIM,EAAW,KAAOA,O,EAIzCG,aAAe,WACb,EAAKN,SAAS,EAAKO,iB,EAGrBC,aAAe,SAACN,GACd,EAAKF,SAAS,CACZF,UAAWI,EAAME,OAAOK,S,uDAxB5B,WACEC,KAAKH,eAAiBG,KAAKf,Q,oBA2B7B,WAAU,IAAD,OACAgB,EAASD,KAAKE,MAAdD,MACP,EAAuCD,KAAKf,MAArCC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,UACpBe,EAAeF,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUlB,KAEzD,OAAQD,GACN,IAAK,iBACHgB,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,IAAK,eACHN,EAAaI,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,OAASG,EAAEH,UAQ7C,OAJIpB,GACFiB,EAAad,UAIb,6BACE,4BACGc,EAAaQ,KAAI,SAAAN,GAAI,OAAI,wBAAIO,IAAKP,GAAOA,OAE5C,4BACEQ,KAAK,SACLlB,KAAK,SACLmB,QAASd,KAAKX,QACd0B,UAAWC,IAAW,MAAO,CAACC,UAAW/B,KAJ3C,WAQA,4BACE2B,KAAK,SACLlB,KAAK,iBACLmB,QAAS,SAAAtB,GAAK,OAAI,EAAKD,YAAYC,IACnCuB,UAAWC,IAAW,MAAO,CAACC,UAAsB,mBAAX9B,KAJ3C,uBAQA,4BACE0B,KAAK,SACLlB,KAAK,eACLmB,QAAS,SAAAtB,GAAK,OAAI,EAAKD,YAAYC,IACnCuB,UAAWC,IAAW,MAAO,CAACC,UAAsB,iBAAX9B,KAJ3C,kBAQA,4BACE0B,KAAK,SACLlB,KAAK,cACLmB,QAASd,KAAKJ,aACdmB,UAAU,OAJZ,SAQA,4BACEpB,KAAK,YACLuB,SAAU,SAAA1B,GAAK,OAAI,EAAKM,aAAaN,IACrCO,MAAOX,GAEN,IAAI+B,MAAM,IAAIC,KAAK,GAAGT,KAAI,SAACU,EAAGC,GAAJ,OAAUA,EAAI,KAAGX,KAAI,SAAAY,GAAI,OAClD,4BAAQxB,MAAOwB,EAAMX,IAAKW,GAAOA,Y,GAjGzBC,IAAMC,WCDpBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAyCaC,E,4MArCb1C,MAAQ,CACN2C,gBAAgB,G,EAGlBC,kBAAoB,WAClB,EAAKvC,SAAS,CACZsC,gBAAgB,K,4CAIpB,WACE,IAAQA,EAAmB5B,KAAKf,MAAxB2C,eAER,OACE,8BACIA,GACF,4BACEf,KAAK,SACLC,QAASd,KAAK6B,mBAFhB,SAQCD,GAEC,kBAAC,EAAD,CACE3B,MAAOyB,S,GA5BDF,IAAMC,WCbxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3c8cdaf9.chunk.js","sourcesContent":["import React from 'react';\nimport './Goods.css';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nclass Goods extends React.Component {\n\n  state = {\n    isReverse: false,\n    sortBy: null,\n    minLength: 1,\n  };\n\n  componentDidMount() {\n    this.defaultFilters = this.state;\n  }\n\n  reverse = () => {\n    this.setState(({isReverse}) => ({\n      isReverse: !isReverse,\n    }));\n  };\n\n  sortHandler = (event) => {\n    const { name: sortType } = event.target;\n\n    this.setState(({ sortBy }) => ({\n      sortBy: sortBy === sortType ? null : sortType,\n    }));\n  }\n\n  resetFilters = () => {\n    this.setState(this.defaultFilters);\n  };\n\n  setMinLength = (event) => {\n    this.setState({\n      minLength: event.target.value,\n    });\n  };\n\n  render() {\n    const {goods} = this.props;\n    const {isReverse, sortBy, minLength} = this.state;\n    const visibleGoods = goods.filter(good => good.length >= minLength);\n\n    switch (sortBy) {\n      case 'sortByAlphabet':\n        visibleGoods.sort((a, b) => a.localeCompare(b));\n        break;\n      case 'sortByLength':\n        visibleGoods.sort((a, b) => a.length - b.length);\n        break;\n    }\n\n    if (isReverse) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div>\n        <ul>\n          {visibleGoods.map(good => <li key={good}>{good}</li>)}\n        </ul>\n        <button\n          type=\"button\"\n          name=\"revers\"\n          onClick={this.reverse}\n          className={classNames('btn', {activeBtn: isReverse})}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          name=\"sortByAlphabet\"\n          onClick={event => this.sortHandler(event)}\n          className={classNames('btn', {activeBtn: sortBy === 'sortByAlphabet'})}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          name=\"sortByLength\"\n          onClick={event => this.sortHandler(event)}\n          className={classNames('btn', {activeBtn: sortBy === 'sortByLength'})}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          name=\"resetFilter\"\n          onClick={this.resetFilters}\n          className=\"btn\"\n        >\n          Reset\n        </button>\n        <select\n          name=\"minLength\"\n          onChange={event => this.setMinLength(event)}\n          value={minLength}\n        >\n          {new Array(10).fill(0).map((_, i) => i + 1).map(item => (\n            <option value={item} key={item}>{item}</option>\n            ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nGoods.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Goods;\n","import React from 'react';\nimport './App.css';\nimport Goods from './components/Goods/Goods';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isGoodsVisible: false,\n  };\n\n  changeGoodsStatus = () => {\n    this.setState({\n      isGoodsVisible: true,\n    });\n  };\n\n  render() {\n    const { isGoodsVisible } = this.state;\n\n    return (\n      <div>\n        {!isGoodsVisible && (\n        <button\n          type=\"button\"\n          onClick={this.changeGoodsStatus}\n        >\n          Start\n        </button>\n        )}\n\n        {isGoodsVisible\n          && (\n          <Goods\n            goods={goodsFromServer}\n          />\n          )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}